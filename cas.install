<?php

/**
 * @file
 * Installation hooks for the CAS module.
 */

/**
 * Implementation of hook_schema().
 */
function cas_schema() {
  $schema = array();

  $schema['cas_login_data'] = array(
    'description' => 'Stores CAS session information.',
    'fields' => array(
      'cas_session_id' => array(
        'description' => 'CAS session ID',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'The {users}.uid associated with the CAS session.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('cas_session_id'),
  );

  $schema['cas_user'] = array(
    'description' => 'Stores CAS authentication mapping.',
    'fields' => array(
      'aid' => array(
        'description' => 'Primary Key: Unique authmap ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "User's {users}.uid.",
      ),
      'cas_name' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Unique authentication name.',
      ),
    ),
    'unique keys' => array(
      'cas_name' => array('cas_name'),
    ),
    'primary key' => array('aid'),
    // 'foreign keys' => array(
    //   'user' => array(
    //     'table' => 'users',
    //     'columns' => array('uid' => 'uid'),
    //   ),
    // ),
  );

  return $schema;
}

/**
 * Implementation of hook_install().
 */
function cas_install() {
  drupal_install_schema('cas');
}

/**
 * Implementation of hook_uninstall().
 */
function cas_uninstall() {
  drupal_uninstall_schema('cas');
}

/**
 * Implementation of hook_update_N().
 */
function cas_update_1() {
  $schema = array();

  $schema['cas_login_data'] = array(
    'description' => 'Stores CAS session information.',
    'fields' => array(
      'cas_session_id' => array(
        'description' => 'CAS session ID',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'The {users}.uid associated with the CAS session.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('cas_session_id'),
  );

  $ret = array();
  db_create_table($ret, 'cas_login_data', $schema['cas_login_data']);
  return $ret;
}

/**
 * Depreciate "Verify the server using PEM cerificate" option.
 */
function cas_update_6300() {
  if (variable_get('cas_cert_verify', 'none') == 'verify') {
    variable_set('cas_cert_verify', 'none');
  }
  $ret = array();
  return $ret;
}

/**
 * Migrate authmap entries to new {cas_user} table.
 */
function cas_update_6301() {
  $schema = array();

  $schema['cas_user'] = array(
    'description' => 'Stores CAS authentication mapping.',
    'fields' => array(
      'aid' => array(
        'description' => 'Primary Key: Unique CAS authentication mapping ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "User's {users}.uid.",
      ),
      'cas_name' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Unique CAS username.',
      ),
    ),
    'unique keys' => array(
      'cas_name' => array('cas_name'),
    ),
    'primary key' => array('aid'),
    // 'foreign keys' => array(
    //   'user' => array(
    //     'table' => 'users',
    //     'columns' => array('uid' => 'uid'),
    //   ),
    // ),
  );

  // Create {cas_user} table.
  $ret = array();
  db_create_table($ret, 'cas_user', $schema['cas_user']);

  // Migrate entries from {authmap} to {cas_user}.
  db_query('INSERT INTO {cas_user} (uid, cas_name) SELECT a.uid AS uid, a.authname AS cas_name FROM {authmap} a WHERE a.module = "cas"');

  // Remove old entries in {authmap}.
  db_query('DELETE FROM {authmap} WHERE module = "cas"');

  return $ret;
}
