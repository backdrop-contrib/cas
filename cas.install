<?php

/**
 * @file
 * Installation hooks for the CAS module.
 */

/**
 * Implements hook_schema().
 */
function cas_schema() {
  $schema = array();

  $schema['cas_login_data'] = array(
    'description' => 'Stores CAS session information.',
    'fields' => array(
      'cas_session_id' => array(
        'description' => 'CAS session ID',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'The {users}.uid associated with the CAS session.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('cas_session_id'),
  );

  $schema['cas_user'] = array(
    'description' => 'Stores CAS authentication mapping.',
    'fields' => array(
      'aid' => array(
        'description' => 'Primary Key: Unique authmap ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "User's {users}.uid.",
      ),
      'cas_name' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Unique authentication name.',
      ),
    ),
    'unique keys' => array(
      'cas_name' => array('cas_name'),
    ),
    'primary key' => array('aid'),
    'foreign keys' => array(
      'user' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function cas_uninstall() {
  // Delete variables.
  variable_del('cas_access');
  variable_del('cas_allow_rememberme');
  variable_del('cas_authmap');
  variable_del('cas_auto_assigned_role');
  variable_del('cas_cert');
  variable_del('cas_cert_verify');
  variable_del('cas_changePasswordURL');
  variable_del('cas_check_first');
  variable_del('cas_debugfile');
  variable_del('cas_domain');
  variable_del('cas_exclude');
  variable_del('cas_first_login');
  variable_del('cas_first_login_destination');
  variable_del('cas_hide_email');
  variable_del('cas_hide_password');
  variable_del('cas_library_dir');
  variable_del('cas_login_drupal_invite');
  variable_del('cas_login_form');
  variable_del('cas_login_invite');
  variable_del('cas_login_message');
  variable_del('cas_login_redir_message');
  variable_del('cas_logout_destination');
  variable_del('cas_logout_redirect');
  variable_del('cas_pages');
  variable_del('cas_pgtformat');
  variable_del('cas_pgtpath');
  variable_del('cas_port');
  variable_del('cas_proxy');
  variable_del('cas_registerURL');
  variable_del('cas_server');
  variable_del('cas_signout');
  variable_del('cas_uri');
  variable_del('cas_user_register');
  variable_del('cas_version');

  // And old (un-used) variables.
  variable_del('cas_hijack_user');
  variable_del('cas_ldap_email_attribute');
  variable_del('cas_useldap');
  variable_del('cas_useldap_groups');
  variable_del('cas_verify');
}

/**
 * Creates CAS login data table for Single-Sign-Out.
 */
function cas_update_1() {
  $schema = array();

  $schema['cas_login_data'] = array(
    'description' => 'Stores CAS session information.',
    'fields' => array(
      'cas_session_id' => array(
        'description' => 'CAS session ID',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'The {users}.uid associated with the CAS session.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('cas_session_id'),
  );

  db_create_table('cas_login_data', $schema['cas_login_data']);
}

/**
 * Depreciate "Verify the server using PEM cerificate" option.
 */
function cas_update_6300() {
  if (variable_get('cas_cert_verify', 'none') == 'verify') {
    variable_set('cas_cert_verify', 'none');
  }
}

/**
 * Migrate authmap entries to new {cas_user} table.
 */
function cas_update_6301() {
  $schema = array();

  $schema['cas_user'] = array(
    'description' => 'Stores CAS authentication mapping.',
    'fields' => array(
      'aid' => array(
        'description' => 'Primary Key: Unique CAS authentication mapping ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "User's {users}.uid.",
      ),
      'cas_name' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Unique CAS username.',
      ),
    ),
    'unique keys' => array(
      'cas_name' => array('cas_name'),
    ),
    'primary key' => array('aid'),
    'foreign keys' => array(
      'user' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );

  // Create {cas_user} table.
  db_create_table('cas_user', $schema['cas_user']);

  // Migrate entries from {authmap} to {cas_user}.
  $query = db_select('authmap', 'a')
    ->condition('module', 'cas');
  $query->addField('a', 'uid');
  $query->addField('a', 'authname', 'cas_name');
  db_insert('cas_user')
    ->from($query)
    ->execute();

  // Remove old entries in {authmap}.
  db_delete('authmap')
    ->condition('module', 'cas')
    ->execute();
}

/**
 * Remove 'hijack user' and 'Drupal is CAS user repository' options.
 */
function cas_update_6302() {
  $message = NULL;
  $t = get_t();

  if (variable_get('cas_authmap', 0) || variable_get('cas_hijack_user', 0)) {
    // Create a mapping in {cas_user} for each current Drupal user.
    // The code below generates SQL equivalent to:
    //   INSERT INTO cas_user (uid, cas_name)
    //   SELECT u.uid AS uid, u.name as cas_name
    //   FROM users u
    //   WHERE uid <> 0 AND NOT EXISTS (SELECT cas_name FROM cas_user c WHERE c.cas_name = u.name);

    $query = db_select('users', 'u');
    $query->addField('u', 'uid', 'uid');
    $query->addField('u', 'name', 'cas_name');
    $query->condition('uid', 0, '<>');
    $query->notExists(
      db_select('cas_user', 'c')
      ->fields('c', array('cas_name'))
      ->where('c.cas_name = u.name')
    );
    db_insert('cas_user')
      ->from($query)
      ->execute();

    $message = $t('Users have been automatically assigned their CAS username. For more information, see "Associating CAS usernames with Drupal users" in the CAS module README.txt.');
  }

  variable_del('cas_authmap');
  variable_del('cas_hijack_user');
  return $message;
}
